items={"advanced-circuit","alien-artifact","arithmetic-combinator","assembling-machine-1","assembling-machine-2","assembling-machine-3","basic-accumulator","basic-beacon","basic-exoskeleton-equipment","basic-inserter","basic-laser-defense-equipment","basic-mining-drill","basic-splitter","basic-transport-belt","basic-transport-belt-to-ground","battery","battery-equipment","battery-mk2-equipment","big-electric-pole","boiler","burner-inserter","burner-mining-drill","car","cargo-wagon","chemical-plant","coal","coin","computer","concrete","constant-combinator","construction-robot","copper-cable","copper-ore","copper-plate","crude-oil-barrel","decider-combinator","diesel-locomotive","electric-engine-unit","electric-furnace","electronic-circuit","empty-barrel","energy-shield-equipment","energy-shield-mk2-equipment","engine-unit","explosives","express-splitter","express-transport-belt-to-ground","fast-inserter","fast-splitter","fast-transport-belt","fast-transport-belt-to-ground","flying-robot-frame","fusion-reactor-equipment","gate","green-wire","gun-turret","iron-chest","iron-gear-wheel","iron-ore","iron-plate","iron-stick","lab","land-mine","laser-turret","logistic-chest-active-provider","logistic-chest-passive-provider","logistic-chest-requester","logistic-chest-storage","logistic-robot","long-handed-inserter","low-density-structure","medium-electric-pole","night-vision-equipment","offshore-pump","oil-refinery","personal-roboport-equipment","pipe","pipe-to-ground","plastic-bar","player-port","processing-unit","pumpjack","radar","rail-chain-signal","rail-signal","raw-wood","red-wire","roboport","rocket-control-unit","rocket-fuel","rocket-part","rocket-silo","satellite","small-electric-pole","small-lamp","small-plane","small-pump","smart-inserter","solar-panel","solar-panel-equipment","solid-fuel","steam-engine","steel-chest","steel-furnace","steel-plate","stone","stone-brick","stone-furnace","stone-wall","storage-tank","substation","sulfur","tank","train-stop","wood","wooden-chest"};
vir={"signal-0","signal-1","signal-2","signal-3","signal-4","signal-5","signal-6","signal-7","signal-8","signal-9","signal-A","signal-B","signal-C","signal-D","signal-E","signal-F"};
numberItem[n_]/;0<n<=Length[items]:=(controlUNDbehavior->{circuitUNDcondition->{firstUNDsignal->{type->"item",name->items[[n]]},constant->0,comparator->">"}});
numberItem[n_]/;Length[items]<n<=Length[items]+Length[vir]:=(controlUNDbehavior->{circuitUNDcondition->{firstUNDsignal->{type->"virtual",name->vir[[n-Length[items]]]},constant->0,comparator->">"}});
Remove[numberItem]
 
g[f_]:=FromDigits[Boole[{True}~Join~f],2]
sortPixels[list_]:=Module[{
uuv=(g/@Transpose[Flatten/@list]),
repl
},
repl=Thread[#->Range[Length[#]]]&@DeleteDuplicates[uuv];
{
Partition[
uuv/.(repl)
,Length[video[[1]]]
],
DeleteDuplicates[Transpose[{uuv/.repl,Transpose[Flatten/@list]}]]
}
]
video={{{False,False,False},{False,False,False},{False,False,False}},{{True,True,False},{True,False,False},{False,False,False}},{{False,False,True},{False,True,False},{True,False,False}},{{True,True,True},{True,True,False},{True,False,False}},{{False,False,False},{False,False,True},{False,True,True}},{{True,True,False},{True,False,True},{False,True,True}},{{False,False,True},{False,True,True},{True,True,True}},{{True,True,True},{True,True,True},{True,True,True}}};
video={
{{False,False,False},{False,False,False},{False,False,False}},
{{True,True,False},{True,False,False},{False,False,False}},
{{False,False,True},{False,True,False},{True,False,False}},
{{False,False,False},{False,False,True},{False,True,True}}
};
video=(#==1&/@#&/@#&/@RandomInteger[{0,1},{4,7,7}])
{{{True,False,True,True,False,False,False},{True,True,False,True,True,True,True},{False,False,False,False,True,True,True},{True,False,False,False,True,False,False},{True,False,True,True,True,False,False},{False,True,False,False,True,False,False},{False,True,False,True,True,False,False}},{{True,False,False,False,True,True,False},{False,True,False,False,True,True,False},{False,True,False,True,False,False,True},{True,True,False,False,True,False,True},{False,False,True,False,True,False,False},{True,False,True,False,False,True,True},{True,True,False,False,True,False,True}},{{True,True,False,False,False,False,False},{False,False,True,False,True,True,False},{False,True,False,False,False,False,False},{True,False,True,True,False,False,False},{False,True,True,True,True,False,False},{True,True,True,True,False,True,False},{False,False,True,False,False,True,True}},{{True,False,False,True,True,True,True},{False,False,False,True,True,False,True},{False,True,False,False,False,False,True},{True,False,False,True,True,True,True},{True,True,True,True,True,True,True},{False,True,True,False,False,True,False},{False,True,True,False,True,True,True}}}
sortPixels[video]
{{{1,2,3,4,5,5,6},{3,7,2,4,1,8,4},{9,10,9,11,3,3,12},{1,11,2,13,12,6,5},{4,13,1,14,1,6,6},{15,14,10,2,3,10,11},{11,12,13,3,12,13,10}},{{1,{True,True,True,True}},{2,{False,False,True,False}},{3,{True,False,False,False}},{4,{True,False,False,True}},{5,{False,True,False,True}},{6,{False,False,False,True}},{7,{True,True,False,False}},{8,{True,True,True,False}},{9,{False,False,False,False}},{10,{False,True,True,True}},{11,{False,True,False,False}},{12,{True,True,False,True}},{13,{False,False,True,True}},{14,{True,False,True,True}},{15,{False,True,True,False}}}}
ArrayPlot[sortPixels[video][[1]]]
Manipulate[ArrayPlot[Boole[video[[frame]]]],{frame,1,Length[video],1}]
 
numToPos[n_,size_]/;size^2>=n>0:=position->{x->Mod[(n-1),size]-Floor[size/2],y->Floor[(n-1)/size]-Floor[size/2]};
posToNum[position->{x->x_,y->y_},size_]:=posToNum1[{x,y},size];

numToPos1[n_,size_]/;size^2>=n>0:={Mod[(n-1),size]-Floor[size/2],Floor[(n-1)/size]-Floor[size/2]};
posToNum1[{x_,y_},size_]/;-Floor[size/2]<=x<Ceiling[size/2]&&-Floor[size/2]<=y<Ceiling[size/2]:=(x+1+Floor[size/2])+size*((y+Floor[size/2]));
videoRunner:=(
size=Dimensions[video][[3]];
data=Table[{
name->"small-lamp",
numToPos[n,size],
numberItem[Flatten[sortPixels[video][[1]]][[n]]],
connections->{
{"1"}->{
red->ReleaseHold[{
If[Mod[n,size]!=1,{entityUNDid->posToNum1[numToPos1[n,size]-{1,0},size]},Hold[Sequence[]]],
{entityUNDid->posToNum1[numToPos1[n,size]+If[Mod[n,size]==0,If[Mod[n,size^2]!=0,{0,1},Hold[Sequence[]]],{1,0}],size]}
}]
}
}
}
,{n,1,size^2}];

data=Join[data,{
{name->"substation",position->{x->-7.5,y->-7.5}},
{name->"substation",position->{x->6.5,y->-7.5}},
{name->"substation",position->{x->-7.5,y->6.5}},
{name->"substation",position->{x->6.5,y->6.5}}
}];
)
 
numberItem2[n_]/;0<n<=Length[items]:=controlUNDbehavior->{deciderUNDconditions->{firstUNDsignal->{type->"item",name->"express-transport-belt"},constant->1,comparator->"->",outputUNDsignal->{type->"item",name->items[[n]]},copyUNDcountUNDfromUNDinput->false}};
numberItem2[n_]/;Length[items]<n<=Length[items]+Length[vir]:=controlUNDbehavior->{deciderUNDconditions->{firstUNDsignal->{type->"item",name->"express-transport-belt"},constant->1,comparator->"->",outputUNDsignal->{type->"virtual",name->vir[[n-Length[items]]]},copyUNDcountUNDfromUNDinput->false}};
videoPlayer:=(
sorted=Transpose[sortPixels[video][[2,All,2]]];
data=Join@@Table[
Join[{
{name->"express-transport-belt",position->{x->-2,y->index1},direction->1},
{
name->"express-transport-belt",
position->{x->-1,y->index1},
direction->4,
controlUNDbehavior->{
circuitUNDenableUNDdisable->false,
circuitUNDreadUNDhandUNDcontents->true,
circuitUNDcontentsUNDreadUNDmode->1
},
connections->{
{"1"}->{red->{{entityUNDid->inc+1,circuitUNDid->1}}}
}
}},
incX=0;
Table[
If[
sorted[[index1,index2]],
incX++;
{
name->"decider-combinator",
position->{x->2(incX),y->index1},
direction->2,
numberItem2[sortPixels[video][[2,index2,1]]],
connections->{
{"1"}->{red->{{entityUNDid->inc-1}}},
{"2"}->{red->{{entityUNDid->inc+3,circuitUNDid->2}}}
}
},
{name->"express-transport-belt",position->{x->-10,y->10},direction->1}
]
,{index2,Length[sorted[[index1]]]}
]]
,{index1,Length[sorted]}
];
)
 
SetDirectory[NotebookDirectory[]~~"..\\..\\Pictures\\frames"];
frames=Import[#]&/@FileNames[];
video={1,1,1,1}==#&/@#&/@Round[ImageData[#]]&/@frames;
videoPlayer
videoRunner
n=StringReplace[
StringReplace[
StringReplace[
ToString[

locstart->{entities->data,icons->{{signal->{type->"item",name->"substation"},index->1},{signal->{type->"item",name->"small-lamp"},index->2}}}

,InputForm]
,{"locstart"->"do local _","->"->"=","UND"->"_"}
]
,{"connections = {{\""~~Shortest[x__]~~"\"}":>"connections = {[\""~~x~~"\"]","{\"2\"}"->"[\"2\"]"}
]
," = "->"="
]~~";return _;end";
ExportString[ExportString[n,"GZIP"],"Base64"]
 
learn=ToExpression[StringReplace[
Import["C:\\Users\\Anton\\AppData\\Roaming\\Factorio\\script-output\\blueprint-string\\lern.txt","Base64"]
,{
"do local _"->"locstart",
"="->"->",
"_"->"UND",
"["->"{",
"]"->"}",
";return _;end"->""
}]][[2,1,2]];
Select[learn,Length[#]>3&][[All,5,2,All,2,1]]//Grid